/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bean.Floor;
import bean.Room;
import bean.TypeRoom;
import controller.ControllerLoaiPhong;
import controller.ControllerRoom;
import controller.ControllerTang;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale.Category;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;
import library.ValidateDB;
import render.LoaiPhongComboboxModel;
import render.TangComboboxModel;
import render.TinhTrangComboboxModel;
import render.TrangThaiComboboxModel;

/**
 *
 * @author vuongluis
 */
public class PnRoom extends javax.swing.JPanel {

    /**
     * Creates new form pnRoom
     */
    private ControllerRoom controller;
    private ControllerTang controllerTang;
    private ControllerLoaiPhong controllerLoaiPhong;
    private TypeRoom objLoaiPhong;
    private Floor objTang;
    
    public PnRoom() {
        initComponents();
        controller = new ControllerRoom(tbMain);
        controllerTang = new ControllerTang(tbMain);
        controllerLoaiPhong = new ControllerLoaiPhong(tbMain);
        
        controller.loadTable();
        controllerTang.loadTang(this.cbTang, false, null);
        controllerTang.loadTang(this.cbTangF, true, null);
        controllerLoaiPhong.loadCategory(this.cbLoaiPhong, false, null);
        controllerLoaiPhong.loadCategory(this.cbLoaiPhongF, true, null);
        
        this.cbTinhTrang.setModel(new TinhTrangComboboxModel());
        this.cbTrangThai.setModel(new TrangThaiComboboxModel());
        
        this.cbTinhTrangF.setModel(new TinhTrangComboboxModel());
        this.cbTrangThaiF.setModel(new TrangThaiComboboxModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        LeftRoom = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfSoPhong = new javax.swing.JTextField();
        tfId = new javax.swing.JTextField();
        cbTrangThai = new javax.swing.JComboBox<>();
        cbLoaiPhong = new javax.swing.JComboBox();
        cbTang = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tfGhiChu = new javax.swing.JTextArea();
        cbTinhTrang = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        RightRoom = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfIDF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfSoPhongF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbTinhTrangF = new javax.swing.JComboBox<>();
        cbTrangThaiF = new javax.swing.JComboBox<>();
        cbLoaiPhongF = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cbTangF = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        TimKiemF = new javax.swing.JButton();
        NhapLaiF = new javax.swing.JButton();
        closeF = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMain = new javax.swing.JTable();

        setBackground(new java.awt.Color(242, 242, 242));
        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setBackground(new java.awt.Color(242, 242, 242));
        jSplitPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jSplitPane1.setDividerSize(6);
        jSplitPane1.setForeground(new java.awt.Color(0, 102, 255));
        jSplitPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSplitPane1.setOneTouchExpandable(true);

        LeftRoom.setBackground(new java.awt.Color(242, 242, 242));
        LeftRoom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết phòng", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        LeftRoom.setMinimumSize(new java.awt.Dimension(325, 478));
        LeftRoom.setPreferredSize(new java.awt.Dimension(500, 538));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Số thứ tự:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Tình trạng:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Số phòng:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Trạng thái:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Loại phòng:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Chọn tầng:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Ghi chú:");

        tfSoPhong.setPreferredSize(new java.awt.Dimension(59, 24));

        tfId.setEditable(false);
        tfId.setPreferredSize(new java.awt.Dimension(59, 24));

        cbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTrangThai.setPreferredSize(new java.awt.Dimension(56, 24));

        cbLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLoaiPhong.setPreferredSize(new java.awt.Dimension(56, 24));

        cbTang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTang.setPreferredSize(new java.awt.Dimension(56, 24));

        tfGhiChu.setColumns(20);
        tfGhiChu.setLineWrap(true);
        tfGhiChu.setRows(5);
        tfGhiChu.setWrapStyleWord(true);
        jScrollPane2.setViewportView(tfGhiChu);

        cbTinhTrang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTinhTrang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cbTinhTrang.setPreferredSize(new java.awt.Dimension(56, 24));

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.gif"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel6.add(btnThem);

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel6.add(btnSua);

        btnNhapLai.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.gif"))); // NOI18N
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });
        jPanel6.add(btnNhapLai);

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.gif"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel6.add(btnXoa);

        javax.swing.GroupLayout LeftRoomLayout = new javax.swing.GroupLayout(LeftRoom);
        LeftRoom.setLayout(LeftRoomLayout);
        LeftRoomLayout.setHorizontalGroup(
            LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftRoomLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LeftRoomLayout.createSequentialGroup()
                        .addComponent(tfId, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addComponent(tfSoPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbTrangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbLoaiPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbTang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbTinhTrang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addGroup(LeftRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LeftRoomLayout.setVerticalGroup(
            LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LeftRoomLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfSoPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(LeftRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSplitPane1.setLeftComponent(LeftRoom);

        RightRoom.setBackground(new java.awt.Color(242, 242, 242));
        RightRoom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng của khách sạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        RightRoom.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm thông tin", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(242, 242, 242));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Mã Phòng:");

        tfIDF.setPreferredSize(new java.awt.Dimension(59, 24));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Số phòng:");

        tfSoPhongF.setPreferredSize(new java.awt.Dimension(59, 24));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Tình trạng:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Trạng thái:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Chọn loại phòng:");

        cbTinhTrangF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", " " }));
        cbTinhTrangF.setPreferredSize(new java.awt.Dimension(56, 24));

        cbTrangThaiF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", " " }));
        cbTrangThaiF.setPreferredSize(new java.awt.Dimension(56, 24));

        cbLoaiPhongF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLoaiPhongF.setPreferredSize(new java.awt.Dimension(56, 24));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Chọn tầng:");

        cbTangF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTangF.setPreferredSize(new java.awt.Dimension(56, 24));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tfIDF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(tfSoPhongF, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTinhTrangF, 0, 84, Short.MAX_VALUE)
                            .addComponent(cbLoaiPhongF, 0, 1, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTangF, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTrangThaiF, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfIDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tfSoPhongF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(cbTinhTrangF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTrangThaiF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbLoaiPhongF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cbTangF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(242, 242, 242));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(242, 242, 242)));
        jPanel5.setLayout(new java.awt.GridLayout(3, 1, 15, 15));

        TimKiemF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TimKiemF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iSearch.png"))); // NOI18N
        TimKiemF.setText("Tìm kiếm ");
        TimKiemF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimKiemFActionPerformed(evt);
            }
        });
        jPanel5.add(TimKiemF);

        NhapLaiF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NhapLaiF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iReset.png"))); // NOI18N
        NhapLaiF.setText("Nhập lại");
        NhapLaiF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NhapLaiFActionPerformed(evt);
            }
        });
        jPanel5.add(NhapLaiF);

        closeF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        closeF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iClose.png"))); // NOI18N
        closeF.setText("Đóng");
        closeF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFActionPerformed(evt);
            }
        });
        jPanel5.add(closeF);

        jPanel3.add(jPanel5, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        RightRoom.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tbMain.setAutoCreateRowSorter(true);
        tbMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbMainMousePressed(evt);
            }
        });
        tbMain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbMainKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbMain);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        RightRoom.add(jPanel2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(RightRoom);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void closeFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFActionPerformed
        jPanel1.setVisible(false);
    }//GEN-LAST:event_closeFActionPerformed

    private void tbMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMainMousePressed
        // TODO add your handling code here:
        setForm();
    }//GEN-LAST:event_tbMainMousePressed

    private void tbMainKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbMainKeyReleased
        // TODO add your handling code here:
        setForm();
    }//GEN-LAST:event_tbMainKeyReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try{
            int soPhong = Integer.parseInt(tfSoPhong.getText());
            String tinhTrang = (String) new TinhTrangComboboxModel().getElementAt(cbTinhTrang.getSelectedIndex());
            String trangThai = (String) new TrangThaiComboboxModel().getElementAt(cbTrangThai.getSelectedIndex());
            TypeRoom loaiPhong = new LoaiPhongComboboxModel().getElementAt(cbLoaiPhong.getSelectedIndex());
            Floor tang = new TangComboboxModel().getElementAt(cbTang.getSelectedIndex());
            String ghiChu = tfGhiChu.getText();            
            Room obj = new Room(0, soPhong, tinhTrang, trangThai, ghiChu, loaiPhong.getMaLP(), tang.getTang());
            if(isValid(obj, "add")){
                if(!new ValidateDB().sophong_exist(obj.getSoPhong())){
                    int result = controller.addItem(obj);
                    if(result > 0){
                        this.resetForm();
                        JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:blue; font-weight:bold;\">Thêm phòng thành công!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                    }else{
                        JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Thêm phòng thất bại!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Số phòng tồn tại trong hệ thống!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                }
            }
        }catch(NumberFormatException ex){
            JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Vui lòng nhập số phòng!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int row = tbMain.getSelectedRow();
        if(row >= 0){
            try{
                int map = Integer.parseInt(tfId.getText());
                int soPhong = Integer.parseInt(tfSoPhong.getText());
                String tinhTrang = (String) new TinhTrangComboboxModel().getElementAt(cbTinhTrang.getSelectedIndex());
                String trangThai = (String) new TrangThaiComboboxModel().getElementAt(cbTrangThai.getSelectedIndex());
                TypeRoom loaiPhong = new LoaiPhongComboboxModel().getElementAt(cbLoaiPhong.getSelectedIndex());
                Floor tang = new TangComboboxModel().getElementAt(cbTang.getSelectedIndex());
                String ghiChu = tfGhiChu.getText();
                Room obj = new Room(map, soPhong, tinhTrang, trangThai, ghiChu, loaiPhong.getMaLP(), tang.getTang());
                if(isValid(obj, "edit")){
                    if(!new ValidateDB().sophong_existver(obj.getSoPhong(),map)){
                        int result = controller.editItem(obj,row);
                        if(result > 0){
                            this.resetForm();
                            JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:blue; font-weight:bold;\">Cập nhật phòng thành công!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                        }else{
                            JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Cập nhật phòng thất bại!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                        }
                    }else{
                        JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Số phòng tồn tại trong hệ thống!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                    }
                }
            }catch(NumberFormatException ex){
                JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Vui lòng nhập số phòng!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showConfirmDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Bạn chưa chọn dòng để cập nhật!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        resetForm();
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tbMain.getSelectedRow();
        if(row >= 0){
            // When i delete new from table, way to good to delete get id from textfield
            int id = Integer.parseInt(tfId.getText());
            if(controller.delItem(id,row)>0){
                JOptionPane.showMessageDialog(new PnRoom(), "<html><p style=\"color:blue; font-weight:bold;\">Xóa phòng thành công!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Xóa phòng thất bại!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(new PnRoom(), "<html><p style=\"color:red; font-weight:bold;\">Bạn chưa chọn dòng để xóa!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void NhapLaiFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NhapLaiFActionPerformed
        // TODO add your handling code here:
        tfIDF.setText("");
        tfSoPhongF.setText("");
        controllerTang.loadTang(this.cbTang, false, null);
        controllerLoaiPhong.loadCategory(this.cbLoaiPhong, false, null);
        this.cbTinhTrangF.setModel(new TinhTrangComboboxModel());
        this.cbTrangThaiF.setModel(new TrangThaiComboboxModel());
        controller.loadTable();
    }//GEN-LAST:event_NhapLaiFActionPerformed

    private void TimKiemFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimKiemFActionPerformed
        // TODO add your handling code here:
        TableRowSorter sorter = new TableRowSorter(tbMain.getModel());
        tbMain.setRowSorter(sorter);
        
        ArrayList<RowFilter<AbstractTableModel,Object>> alFilter = new ArrayList<>();
        
        String id = tfIDF.getText();
        RowFilter<AbstractTableModel,Object> filterID = RowFilter.regexFilter(id, 0);
        
        String soPhong = tfSoPhongF.getText();
        RowFilter<AbstractTableModel,Object> filterName = RowFilter.regexFilter(soPhong, 1);
        
        alFilter.add(filterID);
        alFilter.add(filterName); 
        
        String trangThai = (String) new TrangThaiComboboxModel().getElementAt(cbTrangThaiF.getSelectedIndex());
        if(!trangThai.isEmpty()){
            RowFilter<AbstractTableModel,Object> filterTT = new RowFilter<AbstractTableModel, Object>() {
                @Override
                public boolean include(RowFilter.Entry<? extends AbstractTableModel, ? extends Object> entry) {
                    return trangThai.equals(String.valueOf(entry.getValue(3)));
                }
            };
            alFilter.add(filterTT);
        }
        
        String tinhTrang = (String) new TinhTrangComboboxModel().getElementAt(cbTinhTrangF.getSelectedIndex());
        if(!tinhTrang.isEmpty()){
            RowFilter<AbstractTableModel,Object> filterTTV = new RowFilter<AbstractTableModel, Object>() {
                @Override
                public boolean include(RowFilter.Entry<? extends AbstractTableModel, ? extends Object> entry) {
                    return tinhTrang.equals(String.valueOf(entry.getValue(2)));
                }
            };
            alFilter.add(filterTTV);
        }
        
        objLoaiPhong = (TypeRoom) cbLoaiPhongF.getSelectedItem();
        if(objLoaiPhong.getMaLP() != 0){
            RowFilter<AbstractTableModel,Object> filterLoaiPhong = new RowFilter<AbstractTableModel, Object>() {
                @Override
                public boolean include(RowFilter.Entry<? extends AbstractTableModel, ? extends Object> entry) {
                    // Cateogry objFindCat = (Category)entry.getValue(4) 
                    String tenLoaiPhong = (String) entry.getValue(5);
                    return objLoaiPhong.getTenPhong().equals(tenLoaiPhong);
                }
            };
            alFilter.add(filterLoaiPhong);
        }
        
        objTang = (Floor) cbTangF.getSelectedItem();
        if(objTang.getMaT() != 0){
            RowFilter<AbstractTableModel,Object> filterTang = new RowFilter<AbstractTableModel, Object>() {
                @Override
                public boolean include(RowFilter.Entry<? extends AbstractTableModel, ? extends Object> entry) {
                    // Cateogry objFindCat = (Category)entry.getValue(4) 
                    int tang = (int) entry.getValue(6);
                    return (objTang.getTang() == tang);
                }
            };
            alFilter.add(filterTang);
        }        

        RowFilter<AbstractTableModel,Object> filterAnd = RowFilter.andFilter(alFilter);
        sorter.setRowFilter(filterAnd);
    }//GEN-LAST:event_TimKiemFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeftRoom;
    private javax.swing.JButton NhapLaiF;
    private javax.swing.JPanel RightRoom;
    private javax.swing.JButton TimKiemF;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox cbLoaiPhong;
    private javax.swing.JComboBox cbLoaiPhongF;
    private javax.swing.JComboBox cbTang;
    private javax.swing.JComboBox cbTangF;
    private javax.swing.JComboBox cbTinhTrang;
    private javax.swing.JComboBox<String> cbTinhTrangF;
    private javax.swing.JComboBox<String> cbTrangThai;
    private javax.swing.JComboBox<String> cbTrangThaiF;
    private javax.swing.JButton closeF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable tbMain;
    private javax.swing.JTextArea tfGhiChu;
    private javax.swing.JTextField tfIDF;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfSoPhong;
    private javax.swing.JTextField tfSoPhongF;
    // End of variables declaration//GEN-END:variables

    private void setForm() {
        int row = tbMain.getSelectedRow();
        String id = tbMain.getValueAt(row, 0).toString();
        String name = tbMain.getValueAt(row, 1).toString();
        
        cbTinhTrang.setModel(new TinhTrangComboboxModel((String) tbMain.getValueAt(row, 2)));
        cbTrangThai.setModel(new TrangThaiComboboxModel((String) tbMain.getValueAt(row, 3)));
        
        tfId.setText(id);
        tfSoPhong.setText(name);
        tfGhiChu.setText(tbMain.getValueAt(row, 4).toString());
        
        cbLoaiPhong.setModel(new LoaiPhongComboboxModel(tbMain.getValueAt(row, 5).toString()));
        cbTang.setModel(new TangComboboxModel((int) tbMain.getValueAt(row, 6)));        
    }
    private void resetForm(){
        tfId.setText("");
        tfSoPhong.setText("");
        tfGhiChu.setText("");
        controllerTang.loadTang(this.cbTang, false, null);
        controllerLoaiPhong.loadCategory(this.cbLoaiPhong, false, null);
        controller.loadTable();
    }

    private boolean isValid(Room obj, String function) {
        boolean result = true;
        switch(function){
            case "add":
                break;
            case "edit":
                break;
            case "del":
                if(obj.getMaP()<0){
                    JOptionPane.showConfirmDialog(new PnUser(), "<html><p style=\"color:red; font-weight:bold;\">Bạn chưa chọn dòng để xóa!</p></html>","Thông báo",JOptionPane.WARNING_MESSAGE);
                    result = false;
                }
                break;
        }
        return result;
    }
}
